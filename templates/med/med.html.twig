{% extends 'front.html.twig' %}

{% block title %}
	Radiohub | Doctor
{% endblock %}
{%block footer%}{% endblock %}
{% block header %}
	{{ parent() }}
{% endblock %}
{% block stylesheets %}
	<link rel="stylesheet" href="{{ asset('../../../front/css/customdoctor.css') }}"/>
{% endblock %}


{% block body %}

	<div class="page-container">
		<div class="content-container">
			<h2>Doctor<br>
				[
				{{
      app.user.lastname }}
				{{ app.user.name }}
				]</h2>
			<br></br>
		<div class="search-container">
			<input type="text" id="searchInput" onkeyup="searchItems()" placeholder="Search for anything..">
		</div>

		<div class="content-wrapper">
			<div class="content-column">
				<h3 style=" font-weight: bold; font-family: 'Courier New', monospace;">
					Pending list
				</h3>
				<br></br>
			{% if compteRendus|length > 0 %}
				{% for compteRendu in compteRendus %}
					<div class="item">
						<p class="item_title">Patient:
							{{ compteRendu.idImage.patient.user.name }}
							{{
            compteRendu.idImage.patient.user.lastname }}</p>
						<p>Radiologist:
							{{ compteRendu.idImage.radiologist.user.name }}
							{{
            compteRendu.idImage.radiologist.user.lastname }}</p>
						<p class="item_interpretation">Radiologist's interpretation :
							{{ compteRendu.InterpretationRad }}</p>
						<a href="{{ path('add_decision', {'id': compteRendu.id}) }}" class="button">Add interpretation</a>
					</div>
				{% endfor %}
			{% else %}
				<p>No Report Pending.</p>
			{% endif %}
		</div>
		<div class="content-column">
			<h3 style=" font-weight: bold;font-family: 'Courier New', monospace;">History</h3>
			<br></br>
		{% if done|length > 0 %}

			{% for compteRendu in done %}

				<div class="item">
					<button onclick="downloadPdf('{{ path('generate_pdf', {'id': compteRendu.id}) }}')">Download PDF</button>
					<p class="item_title">Patient:
						{{ compteRendu.idImage.patient.user.name }}
						{{
            compteRendu.idImage.patient.user.lastname }}</p>
					<p>Radiologist:
						{{ compteRendu.idImage.radiologist.user.name }}
						{{
            compteRendu.idImage.radiologist.user.lastname }}</p>
					<p class="item_interpretation">Radiologist's interpretation :
						{{ compteRendu.InterpretationRad }}</p>
					<p class="item_interpretation">Doctorâ€™s interpretation:
						{{ compteRendu.interpretationMed }}</p>
					<p class="item_date">Date:
						{{ compteRendu.date|date('Y-m-d') }}</p>
					{% if prep == null %}
						<a href="{{ path('app_prescription_new', {'compteRenduId': compteRendu.id}) }}" class="button">Create
																																																								            Prescription</a>
						{% endif%}
						{% for p in prep%}
							{% if p.compterendu.id == compteRendu.id %}
								<a href="{{ path('generate_prescription', {'id': p.id}) }}" class="button">
									Prescription PDF</a>
							{% else %}
								<a href="{{ path('app_prescription_new', {'compteRenduId': compteRendu.id}) }}" class="button">Create
																																																																								            Prescription</a>
							{% endif %}
						{% endfor %}
					</div>
				{% endfor %}
				{{ knp_pagination_render(done) }}
			{% else %}
				<p>No History yet.</p>
			{% endif %}
		</div>
	</div>
</div></div><!-- JavaScript function to download the PDF --><script>
function downloadPdf(pdfUrl) { // Send an AJAX request to generate the PDF
var xhr = new XMLHttpRequest();
xhr.open('GET', pdfUrl, true);
xhr.responseType = 'blob';

xhr.onload = function () {
if (xhr.status === 200) { // Create a blob URL for the PDF
var blobUrl = URL.createObjectURL(xhr.response);

// Create a link element and trigger the download
var a = document.createElement('a');
a.href = blobUrl;
a.download = 'compte_rendu.pdf';
document.body.appendChild(a);
a.click();

// Clean up
document.body.removeChild(a);
URL.revokeObjectURL(blobUrl);
}
};

xhr.send();
}

function searchItems() { // Declare variables
var input,
filter,
items,
i,
itemTitle,
itemInterpretation,
itemDate;
input = document.getElementById("searchInput");
filter = input.value.toUpperCase();
items = document.getElementsByClassName("item");

// Loop through all items and hide those that don't match the search query
for (i = 0; i < items.length; i++) {
itemTitle = items[i].getElementsByClassName("item_title")[0];
itemInterpretation = items[i].getElementsByClassName("item_interpretation")[0];
itemDate = items[i].getElementsByClassName("item_date")[0];
// Assuming you have a class "item_date" for date elements

// Check if any of the item content matches the search query
if (itemTitle.innerText.toUpperCase().indexOf(filter) > -1 || itemInterpretation.innerText.toUpperCase().indexOf(filter) > -1 || (itemDate && itemDate.innerText.toUpperCase().indexOf(filter) > -1)) {
items[i].style.display = "";
} else {
items[i].style.display = "none";
}
}
}</script>{% endblock %}
